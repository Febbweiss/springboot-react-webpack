<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>fr.pavnay</groupId>
	<artifactId>springboot-react-webpack-demo</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<name>UI service project</name>
	<description>A demo project with Spring Boot, React and Webpack</description>
	<packaging>${packaging.type}</packaging>

	<scm>
		<developerConnection>scm:git:https://github.com/Febbweiss/springboot-react-webpack</developerConnection>
	</scm>
  
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.3.3.RELEASE</version>
	</parent>

	<properties>
		<java.version>1.8</java.version>
		<packaging.type>war</packaging.type>
		<maven.deploy.skip>true</maven.deploy.skip>
		<project.scm.id>github</project.scm.id>
		<docker.image.prefix>pavnay</docker.image.prefix>
	</properties>

	<dependencies>
		<!-- Spring Boot Core -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<!-- View templating -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<!-- Monitoring -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<!-- Hot swapping for dev purposes -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
		</dependency>
	</dependencies>

	<build>
		<finalName>${project.artifactId}</finalName>
		<resources>
			<resource>
				<directory>${project.basedir}/src/main/resources</directory>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<version>0.0.29</version>
				<configuration>
					<workingDirectory>${project.build.directory}</workingDirectory>
				</configuration>
				<executions>
					<execution>
						<id>install node and npm</id>
						<goals>
							<goal>install-node-and-npm</goal>
						</goals>
						<configuration>
							<nodeVersion>v5.6.0</nodeVersion>
							<npmVersion>3.7.1</npmVersion>
						</configuration>
					</execution>
					<execution>
						<id>npm install</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<arguments>install</arguments>
						</configuration>
					</execution>
					<execution>
						<goals>
                            <goal>npm</goal>
                        </goals>
                        <phase>generate-resources</phase>
                        <configuration>
                            <arguments>run-script dev-build</arguments>
                        </configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<!-- Release -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.5.3</version>
			</plugin>
			<!-- Deployment -->
			<plugin>
				<groupId>org.cloudfoundry</groupId>
				<artifactId>cf-maven-plugin</artifactId>
				<version>1.1.3</version>
				<!-- <configuration>
					<server>cloudfoundry</server>
					<target>TOFILL</target>
					<org>TOFILL</org>
					<space>dev</space>
					<appname>TOFILL</appname>
					<url>TOFILL</url>
					<buildpack>https://github.com/cloudfoundry/java-buildpack.git</buildpack>
					<memory>512</memory>
					<diskQuota>1024</diskQuota>
					<instances>1</instances>
				</configuration> -->
			</plugin>
		</plugins>
	</build>
	
	<profiles>
		<profile>
			<id>docker</id>
			<properties>
				<packaging.type>jar</packaging.type>
			</properties>
			<build>
				<finalName>app</finalName>
	            <plugins>
					<!-- Docker -->
					<plugin>
						<groupId>com.spotify</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<version>0.2.3</version>
						<configuration>
							<goal>package</goal>
							<imageName>${docker.image.prefix}/${project.artifactId}</imageName>
							<dockerDirectory>src/main/docker</dockerDirectory>
							<resources>
								<resource>
									<targetPath>/</targetPath>
									<directory>${project.build.directory}</directory>
									<include>${project.build.finalName}.jar</include>
								</resource>
							</resources>
						</configuration>
						<executions>
							<execution>
								<id>build-image</id>
								<phase>package</phase>
								<goals>
									<goal>build</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
	            </plugins>
            </build>
		</profile>
		<profile>
			<id>production</id>
			<build>
				<plugins>
					<plugin>
						<groupId>com.github.eirslett</groupId>
						<artifactId>frontend-maven-plugin</artifactId>
						<version>0.0.29</version>
						<configuration>
							<workingDirectory>${project.build.directory}</workingDirectory>
						</configuration>
						<executions>
							<execution>
								<goals>
		                            <goal>npm</goal>
		                        </goals>
		                        <phase>generate-resources</phase>
		                        <configuration>
		                            <arguments>run-script prod-build</arguments>
		                        </configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	
</project>
