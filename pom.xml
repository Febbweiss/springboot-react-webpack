<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.opengroupe.cloud.saas</groupId>
	<artifactId>catalog-ui</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<name>UI service project</name>
	<description>Default tools to build UI BFF</description>
	<packaging>jar</packaging>
	<url>http://www.open-groupe.com</url>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.3.3.RELEASE</version>
	</parent>

	<properties>
		<java.version>1.8</java.version>

		<jasmine.version>2.4.1</jasmine.version>
		<jasmine-ajax.version>3.2.0</jasmine-ajax.version>

		<bootstrap.version>3.3.6</bootstrap.version>
		<jquery.version>2.2.1</jquery.version>
		<react.version>0.14.7</react.version>
		<marked.version>0.3.2-1</marked.version>
		<marked-lib.version>0.3.2</marked-lib.version>
	</properties>

	<dependencies>
		<!-- Spring Boot Core -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<!-- View templating -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<!-- Security -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.thymeleaf.extras</groupId>
			<artifactId>thymeleaf-extras-springsecurity4</artifactId>
		</dependency>
		<!-- Persistence -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
		</dependency>
		<!-- Testing -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path-assert</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>jasmine</artifactId>
			<version>${jasmine.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>jquery-mockjax</artifactId>
			<version>1.5.3</version>
			<scope>test</scope>
		</dependency>
		<!-- Monitoring -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<!-- Hot swapping for dev purposes -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
		</dependency>
		<!-- Webjars -->
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>bootstrap</artifactId>
			<version>${bootstrap.version}</version>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>jquery</artifactId>
			<version>${jquery.version}</version>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>react</artifactId>
			<version>${react.version}</version>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>marked</artifactId>
			<version>${marked.version}</version>
		</dependency>
	</dependencies>

	<build>
		<resources>
			<resource>
				<directory>${project.basedir}/src/main/resources</directory>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>com.fizzed</groupId>
				<artifactId>fizzed-watcher-maven-plugin</artifactId>
				<version>1.0.6</version>
				<configuration>
					<watches>
						<watch>
							<excludes>
								<exclude>src/main/resources/static/js/bundle</exclude>
								<exclude>src/main/resources/static/js/jsx</exclude>
							</excludes>
							<recursive>false</recursive>
							<directory>src/main/resources/static/js</directory>
						</watch>
						<watch>
							<exclude>src/main/resources/static/css/bundle</exclude>
							<recursive>false</recursive>
							<directory>src/main/resources/static/css</directory>
						</watch>
						<watch>
							<directory>src/main/wro</directory>
						</watch>
					</watches>
					<goals>
						<goal>process-resources</goal>
					</goals>
				</configuration>
			</plugin>
			<!-- Resource optimization -->
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<!-- Serves *only* to filter the wro.xml so it can get an absolute 
							path for the project -->
						<id>copy-resources</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/target/wro</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/wro</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>uk.co.codezen</groupId>
				<artifactId>react-jsxtransformer-maven-plugin</artifactId>
				<version>1.0</version>
				<executions>
					<execution>
						<id>Compile resources</id>
						<phase>process-resources</phase>
						<goals>
							<goal>compile</goal>
						</goals>
						<configuration>
							<extension>jsx</extension>
							<sourcePath>
								${project.basedir}/src/main/resources/static/js
							</sourcePath>
							<targetPath>
								${project.build.directory}/classes/static/js
							</targetPath>
						</configuration>
					</execution>
					<execution>
						<id>Compile test resources</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>compile</goal>
						</goals>
						<configuration>
							<extension>jsx</extension>
							<sourcePath>
								${project.basedir}/src/test/resources/static/js
							</sourcePath>
							<targetPath>
								${project.basedir}/src/test/resources/static/js/compiled
							</targetPath>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>ro.isdc.wro4j</groupId>
				<artifactId>wro4j-maven-plugin</artifactId>
				<version>1.7.9</version>
				<executions>
					<execution>
						<phase>process-resources</phase>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<wroManagerFactory>ro.isdc.wro.maven.plugin.manager.factory.ConfigurableWroManagerFactory</wroManagerFactory>
					<cssDestinationFolder>${project.build.directory}/classes/static/css</cssDestinationFolder>
					<jsDestinationFolder>${project.build.directory}/classes/static/js</jsDestinationFolder>
					<wroFile>${project.build.directory}/wro/wro.xml</wroFile>
					<extraConfigFile>${project.basedir}/src/main/wro/wro.properties</extraConfigFile>
				</configuration>
			</plugin>
			<!-- Testing -->
			<plugin>
				<groupId>com.github.klieber</groupId>
				<artifactId>phantomjs-maven-plugin</artifactId>
				<version>0.7</version>
				<executions>
					<execution>
						<goals>
							<goal>install</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<version>2.1.1</version>
					<skip>false</skip>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.github.searls</groupId>
				<artifactId>jasmine-maven-plugin</artifactId>
				<version>2.1</version>
				<executions>
					<execution>
						<goals>
							<goal>test</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<webDriverClassName>org.openqa.selenium.phantomjs.PhantomJSDriver</webDriverClassName>
					<webDriverCapabilities>
						<capability>
							<name>phantomjs.binary.path</name>
							<value>${phantomjs.binary}</value>
						</capability>
					</webDriverCapabilities>
					<preloadSources>
						<preloadSource>/webjars/jquery.js</preloadSource>
						<preloadSource>/webjars/react-with-addons.js</preloadSource>
						<preloadSource>/webjars/react-dom.js</preloadSource>
						<preloadSource>/webjars/jquery.mockjax.js</preloadSource>
						<preloadSource>${project.basedir}/src/test/resources/jasmine/config.js</preloadSource>
					</preloadSources>
					<jsSrcDir>${project.build.directory}/classes/static/js</jsSrcDir>
					<sourceIncludes>
						<include>**/*.js</include>
					</sourceIncludes>
					<sourceExcludes>
						<exclude>**/react-bootstrap.js</exclude>
						<exclude>**/app.render.js</exclude>
					</sourceExcludes>
					<jsTestSrcDir>${project.basedir}/src/test/resources/static/js</jsTestSrcDir>
					<specIncludes>
						<include>**/*.spec.js</include>
					</specIncludes>
					<customRunnerTemplate>${project.basedir}/src/test/resources/jasmine/ReactJsSpecRunner.htmltemplate</customRunnerTemplate>
				</configuration>
			</plugin>
			<!-- Deployment -->
			<plugin>
				<groupId>org.cloudfoundry</groupId>
				<artifactId>cf-maven-plugin</artifactId>
				<version>1.1.3</version>
				<!-- <configuration>
					<server>bluemix</server>
					<target>https://api.eu-gb.bluemix.net </target>
					<org>open-groupe.com</org>
					<space>dev</space>
					<appname>TOFILL</appname>
					<url>TOFILL</url>
					<buildpack>https://github.com/cloudfoundry/java-buildpack.git</buildpack>
					<memory>512</memory>
					<diskQuota>1024</diskQuota>
					<instances>1</instances>
				</configuration> -->
			</plugin>
		</plugins>

		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>ro.isdc.wro4j</groupId>
										<artifactId>wro4j-maven-plugin</artifactId>
										<versionRange>[1.7.9,)</versionRange>
										<goals>
											<goal>jshint</goal>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>uk.co.codezen</groupId>
										<artifactId>react-jsxtransformer-maven-plugin</artifactId>
										<versionRange>[1.0,)</versionRange>
										<goals>
											<goal>compile</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>com.github.klieber</groupId>
										<artifactId>phantomjs-maven-plugin</artifactId>
										<versionRange>[0.7,)</versionRange>
										<goals>
											<goal>install</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>